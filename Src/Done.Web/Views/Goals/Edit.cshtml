@using Done.Web.Models.Goals
@using Done.Domain
@model GoalViewModel

@{
    ViewBag.Title = "Edit Goal";
}

<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)

    <div style="display: flex">
        <div class="input-group">
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="name-addon">Name</span>
                </div>

                @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @class = "form-control", aria_label = "Username", aria_describedby = "name-addon" } })
            </div>
            @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
        </div>

        <div class="input-group mb-3 ml-3" style="max-width: 200px;">
            <div class="input-group-prepend" style="display: inline">
                <span class="input-group-text" id="state-addon">Status</span>
            </div>
            <select name="State" class="custom-select" aria-describedby="state-addon">
                @foreach (var item in Enum.GetNames(typeof(State)))
                {
                    <option value="@item" @If(@item, @Model.State.ToString(), @select().ToString())>@item</option>
                }
            </select>
        </div>
    </div>
    <div class="mb-3">
        <textarea name="Description" class="form-control" aria-label="With textarea">@Model.Description</textarea>
    </div>

    <button type="submit" class="btn btn-success float-right">Update</button>
    <br />
    <br />
}

@helper select()
    {@("selected=\"selected\"")}

@helper If(string x, string y, string then)
    {
        if (x == y)
        {
            @then
        }
}