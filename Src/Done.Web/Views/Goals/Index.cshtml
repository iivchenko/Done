@using Page = Done.Core.Web.Pagination.Page
@using Done.Web.Models.Goals
@model IndexViewModel

@{
    ViewBag.Title = "Goals";
}

<!-- TODO: Make more accurate gaol count -->
<div style="display: -ms-inline-flexbox;">
    <p>
        <h2>
            Goals <span class="badge badge-pill badge-light" style="font-size: 50%; vertical-align: top">@Model.Total</span>
            
            <a class="btn btn-success" style="float: right;" href=@Url.Action("New", "Goals")>New goal</a>
        </h2>
    </p>
</div>
<table class="table table-hover">
    <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">State</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var goal in Model.Goals)
        {
            <tr>
                <td>
                    @Html.ActionLink(@goal.Name, "Edit", new { id = goal.Id })
                </td>
                <td>(@goal.State)</td>
            </tr>
        }
    </tbody>
</table>

@CreatePagination(Model)

<!-- Html helpers -->

@helper TrySetActive(Page page)
    {
        if (page.IsActive)
        {
            @("active")
        }
}

@helper TrySetDisabled(Page page)
    {
        if (!page.IsEnabled)
        {
            @("disabled")
        }
}

@helper CreatePagination(IndexViewModel vm)
    {
        var pagination = vm.Pagination;
        <nav>
            @* Previos button *@
            <ul class="pagination justify-content-center">
                <li class="page-item @TrySetDisabled(pagination.Previous)">
                    <a class="page-link" href=@Url.Action("Index",  new { pattern = @vm.Pattern, page = @pagination.Previous.Index }) aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only">Previous</span>
                    </a>
                </li>

                @* Page buttons *@
                @foreach (var page in pagination.Pages)
                {
                    <!-- TODO: Implement correct disable for active page button to avoid naviagtion to it self!-->
                    <li class="page-item @TrySetActive(page)">
                        <a class="page-link" href=@Url.Action("Index",  new { pattern = @vm.Pattern, page = @page.Index })>@page.Index</a>
                    </li>
                }

                @* Next button *@
                <li class="page-item @TrySetDisabled(pagination.Next)">
                    <a class="page-link" href=@Url.Action("Index",  new { pattern = @vm.Pattern, page = @pagination.Next.Index }) aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Next</span>
                    </a>
                </li>
            </ul>
        </nav>
}